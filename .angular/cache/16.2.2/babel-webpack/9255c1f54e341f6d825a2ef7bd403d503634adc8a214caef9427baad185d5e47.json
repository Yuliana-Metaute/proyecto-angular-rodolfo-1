{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n    this.api = 'https://jsonplaceholder.typicode.com';\n  }\n  getAllTasks() {\n    const path = '`${this.api}/todos`';\n    return this.http.get(path);\n  }\n  getTasks(id) {\n    const path = '`${this.api}/todos/${id}`';\n    return this.http.get(path);\n  }\n}\n_class = TaskService;\n_class.ɵfac = function TaskService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["TaskService","constructor","http","api","getAllTasks","path","get","getTasks","id","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Usuario\\Desktop\\tarea-angular-yuli\\pijama\\src\\app\\services\\task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Task } from './../interfaces/task';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  private api = 'https://jsonplaceholder.typicode.com';\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getAllTasks(){\n    const path = '`${this.api}/todos`'\n    return this.http.get<Task[]>(path);\n  }\n\n  getTasks(id: string){\n    const path = '`${this.api}/todos/${id}`'\n    return this.http.get<Task>(path);\n  }\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,WAAW;EAItBC,YACUC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHN,KAAAC,GAAG,GAAG,sCAAsC;EAIhD;EAEJC,WAAWA,CAAA;IACT,MAAMC,IAAI,GAAG,qBAAqB;IAClC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAASD,IAAI,CAAC;EACpC;EAEAE,QAAQA,CAACC,EAAU;IACjB,MAAMH,IAAI,GAAG,2BAA2B;IACxC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAOD,IAAI,CAAC;EAClC;;SAhBWL,WAAW;;mBAAXA,MAAW,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXZ,MAAW;EAAAa,OAAA,EAAXb,MAAW,CAAAc,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}